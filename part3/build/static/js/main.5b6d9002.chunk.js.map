{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseUrl","axios","get","then","response","data","newObject","post","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","console","log","length","notesToShow","filter","Notification","message","map","i","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"4KAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UACf,wBAAW,2BAEf,OACE,qBAAIC,UAAU,OAAd,UACGJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCRpCK,EAAU,aAgBD,EAdA,WAEb,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY5B,EATA,SAAAC,GAEb,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO5B,EAJA,SAACG,EAAIF,GAElB,OADgBL,IAAMQ,IAAN,UAAaT,EAAb,YAAwBQ,GAAMF,GAC/BH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCRrCK,G,MAAS,WAMb,OACE,sBAAKC,MANa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACE,uBACA,qEAiHSC,EA5GH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,IAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,OAIwBN,mBAAS,IAJjC,mBAITO,EAJS,KAIKC,EAJL,KAQhBC,qBAAU,WACRC,IAEGvB,MAAK,SAAAwB,GACJT,EAASS,QAEZ,IACHC,QAAQC,IAAI,SAAUZ,EAAMa,OAAQ,SAIpC,IA0CMC,EAAcV,EAChBJ,EACAA,EAAMe,QAAO,SAAAvC,GAAI,OAAuB,IAAnBA,EAAKG,aAGxBqC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKrC,UAAU,QAAf,SACGqC,KAKP,OACE,gCACE,uCACA,cAACD,EAAD,CAAcC,QAASX,IACvB,8BACE,yBAAQxB,QAAS,kBAAMuB,GAAYD,IAAnC,kBACQA,EAAU,SAAM,oBAG1B,6BACGU,EAAYI,KAAI,SAAC1C,EAAM2C,GAAP,OACf,cAAC,EAAD,CAEE3C,KAAMA,EACNC,iBAAkB,kBAxDC,SAACc,GAC1B,IAAMf,EAAOwB,EAAMoB,MAAK,SAAAC,GAAC,OAAIA,EAAE9B,KAAOA,KAChC+B,EAAW,2BAAQ9C,GAAR,IAAcG,WAAYH,EAAKG,YAEhD8B,EACMlB,EAAI+B,GAAapC,MAAK,SAAAqC,GAC5BtB,EAASD,EAAMkB,KAAI,SAAA1C,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO+C,SAEpDC,OAAM,SAAAC,GACLlB,EAAgB,SAAD,OACF/B,EAAKK,QADH,sCAGb6C,YAAW,WACTnB,EAAgB,QACf,KACLN,EAASD,EAAMe,QAAO,SAAAM,GAAC,OAAIA,EAAE9B,KAAOA,SAyCNoC,CAAmBnD,EAAKe,MAF3C4B,QAMX,uBAAMS,SA7EM,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBlD,QAASqB,EACT8B,MAAM,IAAIC,MAAOC,cACjBvD,UAAWwD,KAAKC,SAAW,IAG7B3B,EACQsB,GACP7C,MAAK,SAAAqC,GACJtB,EAASD,EAAMqC,OAAOd,IACtBpB,EAAW,QAiEX,UACE,uBACEmC,MAAOpC,EACPqC,SA5CiB,SAACV,GACxBlB,QAAQC,IAAIiB,EAAMW,OAAOF,OACzBnC,EAAW0B,EAAMW,OAAOF,UA4CpB,wBAAQG,KAAK,SAAb,6BAEF,cAAC,EAAD,QCxHNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.5b6d9002.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? ' やっぱgm' : 'やっぱ神'\n\n  return (\n    <li className='note'>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note\n","import axios from 'axios'\nconst baseUrl = '/api/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\nexport default { getAll, create, update }\n","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport noteService from './services/notes'\nimport './index.css'\n\n  //Footer仮 </Footer>で表示\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Note app, MADE BY おれ</em>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([])\n  const [newNote, setNewNote] = useState('')\n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('')\n\n\n//ここでJsonサーバーからデータを受け取る\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n\n  //投稿をjason DBに記録\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    }\n    //ここで新しいノートオブジェクトを設定\n    noteService\n    .create(noteObject)\n    .then(returnedNote => {\n      setNotes(notes.concat(returnedNote))\n      setNewNote('')\n    })\n  }\n\n  //重要パラメータの変更ボタンの動作\n    const toggleImportanceOf = (id) => {\n      const note = notes.find(n => n.id === id)\n      const changedNote = { ...note, important: !note.important }\n\n      noteService\n    .update(id, changedNote).then(returnedNote => {\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n    })\n    .catch(error => {\n      setErrorMessage(\n          `Note '${note.content}' was already removed from server`\n        )\n        setTimeout(() => {\n          setErrorMessage(null)\n        }, 5000)\n      setNotes(notes.filter(n => n.id !== id))\n    })\n}\n  //form中身の変更内容取得\n  const handleNoteChange = (event) => {\n    console.log(event.target.value)\n    setNewNote(event.target.value)\n  }\n\n  //重要項目だけ表示するか選択\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important === true)\n\n  //エラーメッセージ\n  const Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n\n    return (\n      <div className=\"error\">\n        {message}\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage} />\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? '神' : '全部' }\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note, i) =>\n          <Note\n            key={i}\n            note={note}\n            toggleImportance={() => toggleImportanceOf(note.id)}\n          />\n        )}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote}\n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">決定</button>\n      </form>\n      <Footer />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}